---
# File generated by dokgen. Do not edit. 
# Edit 'src/main/kotlin/docs/60_Ornaments/C100_Blobby_shapes.kt' instead.
layout: default
title: Blobby shapes
parent: Ornaments
last_modified_at: 2025.10.30 07:02:05 +0000
nav_order: 100
has_children: false
---
 
# Blobby shapes

## Blobby shapes from Hobby curves 
 
 
<img alt="../media/blobby-shapes-0010.png" src="../media/blobby-shapes-0010.png" loading="lazy"> 
 
```kotlin
import org.openrndr.application
import org.openrndr.color.ColorRGBa
import org.openrndr.extra.camera.Camera2D
import org.openrndr.extra.color.presets.SALMON
import org.openrndr.extra.noise.phrases.fhash12
import org.openrndr.extra.noise.scatter
import org.openrndr.extra.shadestyles.fills.gradients.gradient
import org.openrndr.extra.shapes.hobbycurve.hobbyCurve
import org.openrndr.extra.shapes.ordering.hilbertOrder
import org.openrndr.extra.shapes.ordering.mortonOrder
import org.openrndr.extra.shapes.primitives.subtract

fun main() = application {
    configure {
        width = 720
        height = 960
    }
    program {
        val points = drawer.bounds.offsetEdges(-100.0).scatter(50.0).hilbertOrder()
        val curve = hobbyCurve(points, true)
        
        extend(Camera2D())
        extend {
            drawer.clear(ColorRGBa.WHITE)
            drawer.stroke = null
            drawer.shadeStyle = gradient<ColorRGBa> {
                stops[0.0] = ColorRGBa.BLACK
                stops[0.5] = ColorRGBa.PINK
                stops[1.0] = ColorRGBa.WHITE
                levelWarpFunction = """$fhash12
                        float levelWarp(vec2 p, float l) {
                            float n = fhash12(p) - 0.5;
                            return l + n * 0.5;
                     }
                    """.trimIndent()
                radial {
                }
            }
            drawer.contour(curve)
        }
    }
}
``` 
 
## Blobby shapes with circles 

A continuation from the previous example. Circles with gradient are drawn at the same position as the points used 
to create the Hobby curve.
 
 
<img alt="../media/blobby-shapes-0020.png" src="../media/blobby-shapes-0020.png" loading="lazy"> 
 
```kotlin
import org.openrndr.application
import org.openrndr.color.ColorRGBa
import org.openrndr.extra.camera.Camera2D
import org.openrndr.extra.color.presets.SALMON
import org.openrndr.extra.noise.phrases.fhash12
import org.openrndr.extra.noise.scatter
import org.openrndr.extra.shadestyles.fills.gradients.gradient
import org.openrndr.extra.shapes.hobbycurve.hobbyCurve
import org.openrndr.extra.shapes.ordering.hilbertOrder
import org.openrndr.extra.shapes.ordering.mortonOrder
import org.openrndr.extra.shapes.primitives.subtract

fun main() = application {
    configure {
        width = 720
        height = 960
    }
    program {
        val points = drawer.bounds.offsetEdges(-100.0).scatter(25.0).mortonOrder()
        val curve = hobbyCurve(points, true)
        
        extend {
            drawer.clear(ColorRGBa.WHITE)
            drawer.stroke = null
            drawer.shadeStyle = gradient<ColorRGBa> {
                stops[0.0] = ColorRGBa.BLACK
                stops[0.5] = ColorRGBa.SALMON
                stops[1.0] = ColorRGBa.WHITE
                levelWarpFunction = """$fhash12
                        float levelWarp(vec2 p, float l) {
                            float c = fhash12(p + vec2(3021.0, 121.0));
                            float n = fhash12(p) - 0.5;
                            return l + n * 0.5;
                     }
                    """.trimIndent()
                radial {
                }
            }
            drawer.fill = ColorRGBa.WHITE
            drawer.stroke = null
            drawer.circles(points, 50.0)
            
            drawer.fill = null
            drawer.stroke = ColorRGBa.BLACK
            drawer.contour(curve)
            
            // add a white border
            drawer.shadeStyle = null
            drawer.stroke = null
            drawer.fill = ColorRGBa.WHITE
            drawer.rectangles(drawer.bounds.subtract(drawer.bounds.offsetEdges(-20.0)))
        }
    }
}
``` 

[edit on GitHub](https://github.com/openrndr/openrndr-guide/blob/main/src/main/kotlin/docs/60_Ornaments/C100_Blobby_shapes.kt){: .btn .btn-github }