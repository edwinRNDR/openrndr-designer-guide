---
# File generated by dokgen. Do not edit. 
# Edit 'src/main/kotlin/docs/40_Placing_things/C100_Rectangles.kt' instead.
layout: default
title: Rectangles
parent: Placing things
last_modified_at: 2025.10.30 07:02:05 +0000
nav_order: 100
has_children: false
---
 
# Rectangles

Rectangles are great for placing things on the screen. In this chapter we show how to
create rectangles and how to query their properties. We show how to perform common
computations using rectangles to determine their position and size. 
 
## Creating rectangles 
 
<img alt="../media/rectangles-001.png" src="../media/rectangles-001.png" loading="lazy"> 
 
```kotlin
import org.openrndr.application
import org.openrndr.color.ColorRGBa
import org.openrndr.draw.isolated
import org.openrndr.draw.loadFont
import org.openrndr.extra.shapes.primitives.grid
import org.openrndr.extra.textwriter.writer
import org.openrndr.shape.Rectangle

fun main() = application {
    configure {
        width = 720
        height = 720
    }
    program {
        extend {
            // create our first rectangle
            // top-left corner is at 40, 40
            // width is 100.0 and height is 120.0
            val r0 = Rectangle(40.0, 40.0, 100.0, 120.0)
            
            // draw r0
            drawer.rectangle(r0)
            
            // create our second rectangle, from the center
            // center is at drawer.bounds.center
            // width is 120.0 and height is 100.0
            val r1 = Rectangle.fromCenter(drawer.bounds.center, 120.0, 100.0)
            
            // draw r1
            drawer.rectangle(r1)
        }
    }
}
``` 
 
## Scaling rectangles

Using the `scaledBy` function we can create a scaled version of a rectangle. By default the rectangle is scaled 
around its center. 
 
<img alt="../media/rectangles-002.png" src="../media/rectangles-002.png" loading="lazy"> 
 
```kotlin
import org.openrndr.application
import org.openrndr.color.ColorRGBa
import org.openrndr.draw.isolated
import org.openrndr.draw.loadFont
import org.openrndr.extra.shapes.primitives.grid
import org.openrndr.extra.textwriter.writer
import org.openrndr.shape.Rectangle

fun main() = application {
    configure {
        width = 720
        height = 720
    }
    program {
        extend {
            val r = Rectangle.fromCenter(drawer.bounds.center, 120.0, 100.0)
            
            // turn off fill
            drawer.fill = null
            drawer.stroke = ColorRGBa.WHITE
            
            // draw r1
            drawer.rectangle(r)
            
            for (i in 1 until 10) {
                val rs = r.scaledBy(1.0 + i * 0.1)
                drawer.rectangle(rs)
            }
        }
    }
}
``` 
 
## Scaling rectangles using anchor points
 
 
<img alt="../media/rectangles-003.png" src="../media/rectangles-003.png" loading="lazy"> 
 
```kotlin
import org.openrndr.application
import org.openrndr.color.ColorRGBa
import org.openrndr.draw.isolated
import org.openrndr.draw.loadFont
import org.openrndr.extra.shapes.primitives.grid
import org.openrndr.extra.textwriter.writer
import org.openrndr.shape.Rectangle

fun main() = application {
    configure {
        width = 720
        height = 720
    }
    program {
        extend {
            val columns = 5
            val rows = 5
            
            // create a grid of rectangles
            val grid = drawer.bounds.grid(columns, rows)
            
            drawer.fill = null
            drawer.stroke = ColorRGBa.WHITE
            
            for ((y, row) in grid.withIndex()) {
                for ((x, cell) in row.withIndex()) {
                    // first make a small version of cell
                    val r = cell.scaledBy(0.25)
                    drawer.rectangle(r)
                    
                    // remove this block if you don't want the numbers
                    drawer.isolated {
                        drawer.fill = ColorRGBa.WHITE
                        drawer.fontMap = loadFont("data/fonts/default.otf", 12.0)
                        
                        writer {
                            box = r.offsetEdges(-5.0)
                            newLine()
                            val uAnchor = x / (columns - 1.0)
                            val vAnchor = y / (rows - 1.0)
                            text("$uAnchor $vAnchor")
                        }
                    }
                    
                    // draw 9 larger copies using varying anchor points
                    for (i in 1 until 10) {
                        val rs = r.scaledBy(1 + i * 0.25, uAnchor = x / (columns - 1.0), vAnchor = y / (rows - 1.0))
                        drawer.rectangle(rs)
                    }
                }
            }
        }
    }
}
``` 
 
## Placing items inside a rectangle

Using `Rectangle.position` we can place items inside a rectangle. 
 
<img alt="../media/rectangles-004.png" src="../media/rectangles-004.png" loading="lazy"> 
 
```kotlin
import org.openrndr.application
import org.openrndr.color.ColorRGBa
import org.openrndr.draw.isolated
import org.openrndr.draw.loadFont
import org.openrndr.extra.shapes.primitives.grid
import org.openrndr.extra.textwriter.writer
import org.openrndr.shape.Rectangle

fun main() = application {
    configure {
        width = 720
        height = 720
    }
    program {
        extend {
            // create a rectangle from the center
            val r = Rectangle.fromCenter(drawer.bounds.center, 300.0, 200.0)
            
            // draw our base rectangle
            drawer.fill = null
            drawer.stroke = ColorRGBa.WHITE
            drawer.rectangle(r)
            
            // restore drawer
            drawer.fill = ColorRGBa.WHITE
            drawer.stroke = null
            
            // draw a grid of circles inside the rectangle
            val rows = 6
            val columns = 9
            for (j in 1 until rows) {
                for (i in 1 until columns) {
                    val p = r.position(i.toDouble() / columns, j.toDouble() / rows)
                    drawer.circle(p, 5.0)
                }
            }
        }
    }
}
``` 
 
## Placing items inside a rectangle

Using `Rectangle.position` we can place items inside a rectangle. 
 
<img alt="../media/rectangles-004.png" src="../media/rectangles-004.png" loading="lazy"> 
 
```kotlin
import org.openrndr.application
import org.openrndr.color.ColorRGBa
import org.openrndr.draw.isolated
import org.openrndr.draw.loadFont
import org.openrndr.extra.shapes.primitives.grid
import org.openrndr.extra.textwriter.writer
import org.openrndr.shape.Rectangle

fun main() = application {
    configure {
        width = 720
        height = 720
    }
    program {
        extend {
            // create a rectangle from the center
            val r = Rectangle.fromCenter(drawer.bounds.center, 300.0, 200.0)
            
            // draw our base rectangle
            drawer.fill = null
            drawer.stroke = ColorRGBa.WHITE
            drawer.rectangle(r)
            
            // restore drawer
            drawer.fill = ColorRGBa.WHITE
            drawer.stroke = null
            
            // draw a grid of circles inside the rectangle
            val rows = 6
            val columns = 9
            for (j in 1 until rows) {
                for (i in 1 until columns) {
                    val p = r.position(i.toDouble() / columns, j.toDouble() / rows)
                    drawer.circle(p, 5.0)
                }
            }
        }
    }
}
``` 
 
<img alt="../media/rectangles-004.png" src="../media/rectangles-004.png" loading="lazy"> 

[edit on GitHub](https://github.com/openrndr/openrndr-guide/blob/main/src/main/kotlin/docs/40_Placing_things/C100_Rectangles.kt){: .btn .btn-github }